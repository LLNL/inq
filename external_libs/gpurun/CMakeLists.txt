# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

set(CMAKE_VERBOSE_MAKEFILE ON)
set(FETCHCONTENT_UPDATES_DISCONNECTED ON CACHE BOOL "")
set(FETCHCONTENT_QUIET FALSE)
Include(FetchContent)

message(STATUS "Downloading Catch2 v3p3p2 for gpurun")
FetchContent_Declare(
	Catch2
	GIT_REPOSITORY https://github.com/catchorg/Catch2.git
	GIT_TAG        v3.3.2
  GIT_PROGRESS   TRUE
  GIT_SHALLOW    TRUE
)
FetchContent_MakeAvailable(Catch2)
link_libraries(Catch2::Catch2WithMain)

#UNIT TESTS

file(GLOB INCLUDE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} include/gpu/*.hpp)

add_custom_command(OUTPUT gpurun_unit_tests.cpp
													COMMAND echo ARGS //This file is automatically generated, do not edit > ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp)
													
foreach(TEST_FILE ${INCLUDE_FILES})
  get_filename_component(dir ${TEST_FILE} DIRECTORY)
  get_filename_component(name ${TEST_FILE} NAME_WE)
	string(TOUPPER GPURUN__${name}__UNIT_TEST test_macro)
  add_custom_command(OUTPUT gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#define ${test_macro} >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#define GPURUN_TEST_FILE \\\"${TEST_FILE}\\\" >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#define GPURUN_TEST_TAG \\\"[${name}]\\\" >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#include \\\"${CMAKE_CURRENT_SOURCE_DIR}/${TEST_FILE}\\\" >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#ifdef ${test_macro} >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#error NO TEST INCLUDED, MACRO ${test_macro} STILL DEFINED >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#endif >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#undef GPURUN_TEST_FILE >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
    COMMAND echo ARGS \\\#undef GPURUN_TEST_TAG >> ${CMAKE_CURRENT_BINARY_DIR}/gpurun_unit_tests.cpp
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${TEST_FILE}
		APPEND)

	add_test(NAME gpurun::unit_tests::gpu::${name} COMMAND ./gpurun_unit_tests [${name}])
endforeach()

include_directories(${PROJECT_SOURCE_DIR}/external_libs)
include_directories(${PROJECT_BINARY_DIR})

if(ENABLE_GPU)
	set_source_files_properties(gpurun_unit_tests.cpp PROPERTIES LANGUAGE ${GPU_LANGUAGE})
endif()

add_executable(gpurun_unit_tests)
target_sources(gpurun_unit_tests PRIVATE gpurun_unit_tests.cpp)
target_link_libraries(gpurun_unit_tests PRIVATE Catch2::Catch2WithMain inq)
target_link_libraries(gpurun_unit_tests INTERFACE hip::host)
target_link_libraries(gpurun_unit_tests INTERFACE hip::thrust)
