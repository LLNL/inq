# -*- indent-tabs-mode: t -*-
include_directories(.)
include_directories(../external_libs)

add_library(unit_tests_main OBJECT main/unit_tests_main.${SRC_EXT})

file(GLOB INCLUDE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} */*.hpp)

add_custom_command(OUTPUT all_unit_tests.cpp
													COMMAND echo ARGS //This file is automatically generated, do not edit > ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp
													COMMAND echo ARGS \\\#include \\\"inq/inq.hpp\\\" >> ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp)
													
foreach(TEST_FILE ${INCLUDE_FILES})
  get_filename_component(dir ${TEST_FILE} DIRECTORY)
  get_filename_component(name ${TEST_FILE} NAME_WE)
	string(TOUPPER INQ_${dir}_${name}_UNIT_TEST test_macro)
  add_custom_command(OUTPUT all_unit_tests.cpp
    COMMAND echo ARGS \\\#define ${test_macro} >> ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp
    COMMAND echo ARGS \\\#include \\\"${CMAKE_CURRENT_SOURCE_DIR}/${TEST_FILE}\\\" >> ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp
    COMMAND echo ARGS \\\#ifdef ${test_macro} >> ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp
    COMMAND echo ARGS \\\#error NO TEST INCLUDED, MACRO ${test_macro} STILL DEFINED >> ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp
    COMMAND echo ARGS \\\#endif >> ${CMAKE_CURRENT_BINARY_DIR}/all_unit_tests.cpp    
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${TEST_FILE}
		APPEND)

  #maybe we should run individualized tests 
  #target_include_directories(all_unit_tests PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
endforeach()

add_executable(all_unit_tests)
target_sources(all_unit_tests PRIVATE all_unit_tests.cpp)
target_link_libraries(all_unit_tests PRIVATE unit_tests_main Catch2::Catch2)
add_test(NAME unit_tests COMMAND ${PROJECT_BINARY_DIR}/scripts/run_test.sh ./all_unit_tests)

if(ENABLE_CUDA)
	set_source_files_properties(all_unit_tests PROPERTIES LANGUAGE CUDA)
endif()

