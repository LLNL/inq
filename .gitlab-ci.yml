# This file is a template, and might need editing before it works on your project.
#image: golang:latest

#variables:
#  # Please edit to your GitLab project
#  REPO_NAME: gitlab.com/namespace/project

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
#before_script:
#  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
#  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
#  - cd $GOPATH/src/$REPO_NAME

image: debian:stable

before_script:
    - time apt update -qq
    - time apt install -y -qq g++ gfortran autoconf make automake libgsl-dev libblas-dev liblapack-dev libfftw3-dev

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CXXFLAGS: "-O0"

stages:
    - build

Build:
    stage: build
    script:
      - time autoreconf -i
      - mkdir build
      - cd build
      - time ../configure -prefix=$HOME
      - time make install
      - time src/inq_unit_tests

